<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YourChores.Server</name>
    </assembly>
    <members>
        <member name="T:YourChores.Server.APIModels.AcceptInvitationAPIModel">
            <summary>
            API Model for the user to accept the invitation to join a room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.AcceptInvitationAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AcceptInvitationAPIModel.Request.JoinRequestId">
            <summary>
            The id of the join rquest
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.AcceptRequestAPIModel">
            <summary>
            API Model for the Kicking a member outside the room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.AcceptRequestAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AcceptRequestAPIModel.Request.RoomId">
            <summary>
            The id of the room we are managing
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AcceptRequestAPIModel.Request.JoinRequestId">
            <summary>
            The id of the join rquest
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.APIResponse">
            <summary>
             Base response in case there is no data 
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.APIResponse.Success">
            <summary>
            If the call was successfull
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.APIResponse.Errors">
            <summary>
            The errors if not successfull
            </summary>
        </member>
        <member name="M:YourChores.Server.APIModels.APIResponse.AddError(System.String)">
            <summary>
            ADding an error to the error list
            </summary>
            <param name="error"></param>
        </member>
        <member name="T:YourChores.Server.APIModels.APIResponse`1">
            <summary>
            Base response with data
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:YourChores.Server.APIModels.APIResponse`1.Response">
            <summary>
            The response data
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.AppVersionAPIModel">
            <summary>
            API Model for the app version
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.AppVersionAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Request.Version">
            <summary>
            The version of this download
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Request.LowestAllowedVersion">
            <summary>
            THe lowest allowed version to run right now
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Request.Message">
            <summary>
            Message to show to the user who have old version
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Request.DownloadURL">
            <summary>
            The download link to this version
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.AppVersionAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Response.Version">
            <summary>
            The version of this download
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Response.LowestAllowedVersion">
            <summary>
            THe lowest allowed version to run right now
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Response.Message">
            <summary>
            Message to show to the user who have old version
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.AppVersionAPIModel.Response.DownloadURL">
            <summary>
            The download link to this version
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CancelInvitaionAPIModel">
            <summary>
            API Model for the Kicking a member outside the room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CancelInvitaionAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CancelInvitaionAPIModel.Request.RoomId">
            <summary>
            The id of the room we are managing
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CancelInvitaionAPIModel.Request.JoinRequestId">
            <summary>
            The id of the join rquest
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CancelRequestAPIModel">
            <summary>
            API Model for the users to cancel a sent request to a room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CancelRequestAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CancelRequestAPIModel.Request.JoinRequestId">
            <summary>
            The id of the join rquest
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.ChangeNameAPIModel">
            <summary>
            The api model for changing the first and last name of a user
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.ChangeNameAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChangeNameAPIModel.Request.Firstname">
            <summary>
            The first name
            </summary>
            <example>firstName</example>
        </member>
        <member name="P:YourChores.Server.APIModels.ChangeNameAPIModel.Request.Lastname">
            <summary>
            The last name
            </summary>
            <example>lastName</example>
        </member>
        <member name="T:YourChores.Server.APIModels.ChangePasswordAPIModel">
            <summary>
            The api model for changin the password
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.ChangePasswordAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChangePasswordAPIModel.Request.OldPassword">
            <summary>
            The old password
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChangePasswordAPIModel.Request.NewPassword">
            <summary>
            The new password
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.ChoreAPIModel">
            <summary>
            API Model for the chores 
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.ChoreAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChoreAPIModel.Response.ChoreId">
            <summary>
            The id of the requested chore
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChoreAPIModel.Response.Description">
            <summary>
            The description of the chore
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChoreAPIModel.Response.Urgency">
            <summary>
            The urgency of the chore
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChoreAPIModel.Response.CreatedOn">
            <summary>
            The date this chore was created
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChoreAPIModel.Response.Done">
            <summary>
            If this chore was already done
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChoreAPIModel.Response.RoomId">
            <summary>
            The id of the room this chore posted in
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.ChoreAPIModel.Response.RoomName">
            <summary>
            The name of the room this chore posted in
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CreateChoreAPIModel">
            <summary>
            API model for creating a chore
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CreateChoreAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateChoreAPIModel.Request.RoomId">
            <summary>
            The id of the room
            </summary>
            <example>Adam's Home</example>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateChoreAPIModel.Request.Description">
            <summary>
            The description of the chore
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateChoreAPIModel.Request.Urgency">
            <summary>
            The urgency of the chore
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CreateChoreAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateChoreAPIModel.Response.ChoreId">
            <summary>
            The created Chore Id
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateChoreAPIModel.Response.Description">
            <summary>
            The description of the chore
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateChoreAPIModel.Response.Urgency">
            <summary>
            The urgency of the chore
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CreateRoomAPIModel">
            <summary>
            API model for creating a room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CreateRoomAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateRoomAPIModel.Request.RoomName">
            <summary>
            The name of the room
            </summary>
            <example>Adam's Home</example>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateRoomAPIModel.Request.AllowMembersToPost">
            <summary>
            Giving the ability to room members to share chores
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.CreateRoomAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateRoomAPIModel.Response.RoomName">
            <summary>
            The created room name
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.CreateRoomAPIModel.Response.AllowMembersToPost">
            <summary>
            if the created room allow members to post
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.DeclineInvitationAPIModel">
            <summary>
            API Model for the declining an invitation
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.DeclineInvitationAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.DeclineInvitationAPIModel.Request.JoinRequestId">
            <summary>
            The id of the join rquest
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.DeclineRequestAPIModel">
            <summary>
            API Model for the declining a join request
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.DeclineRequestAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.DeclineRequestAPIModel.Request.RoomId">
            <summary>
            The id of the room we are managing
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.DeclineRequestAPIModel.Request.JoinRequestId">
            <summary>
            The id of the join rquest
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.DemoteOwnerAPIModel">
            <summary>
            API Model for the Kicking a member outside the room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.DemoteOwnerAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.DemoteOwnerAPIModel.Request.RoomId">
            <summary>
            The id of the room we are managing
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.DemoteOwnerAPIModel.Request.UserId">
            <summary>
            The id of the owner we are going to demote
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.InviteUserRequestAPIModel">
            <summary>
            Api model to invite a user to join a toom
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.InviteUserRequestAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.InviteUserRequestAPIModel.Request.RoomId">
            <summary>
            The id of the room
            </summary>
            <example>1</example>
        </member>
        <member name="P:YourChores.Server.APIModels.InviteUserRequestAPIModel.Request.UserId">
            <summary>
            The id of the user
            </summary>
            <example>e4787142-cfe6-423d-a4ac-da15c58ef09e</example>
        </member>
        <member name="T:YourChores.Server.APIModels.JoinRoomRequestAPIModel">
            <summary>
            API model to send join request to a room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.JoinRoomRequestAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.JoinRoomRequestAPIModel.Request.RoomId">
            <summary>
            The id of the room
            </summary>
            <example>1</example>
        </member>
        <member name="T:YourChores.Server.APIModels.KickUserAPIModel">
            <summary>
            API Model for the Kicking a member outside the room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.KickUserAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.KickUserAPIModel.Request.RoomId">
            <summary>
            The id of the room we are going to leave
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.KickUserAPIModel.Request.UserId">
            <summary>
            The id of the user who shull be kicked
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.LeaveRoomAPIModel">
            <summary>
            API Model for the rooms end point
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.LeaveRoomAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.LeaveRoomAPIModel.Request.RoomId">
            <summary>
            The id of the room we are going to leave
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.LeaveRoomAPIModel.Request.AlternativeId">
            <summary>
            The id of the user who should replace us of we were the last owner of this room, and the room has other user
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.LoginAPIModel">
            <summary>
            API Model for the login
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.LoginAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.LoginAPIModel.Request.UserNameOrEmail">
            <summary>
            You can either use your username or email
            </summary>
            <example>qwer</example>
        </member>
        <member name="P:YourChores.Server.APIModels.LoginAPIModel.Request.Password">
            <summary>
            The password for loggin in
            </summary>
            <example>123123123</example>
        </member>
        <member name="T:YourChores.Server.APIModels.LoginAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.LoginAPIModel.Response.Token">
            <summary>
            The authorization token
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.LoginAPIModel.Response.UserId">
            <summary>
            The id of the logged in user
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.PromoteUserAPIModel">
            <summary>
            API Model for the Kicking a member outside the room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.PromoteUserAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.PromoteUserAPIModel.Request.RoomId">
            <summary>
            The id of the room we are managing
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.PromoteUserAPIModel.Request.UserId">
            <summary>
            The id of the user who shull be promoted
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RegisterAPIModel">
            <summary>
            API model for registering a new user
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RegisterAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RegisterAPIModel.Request.UserName">
            <summary>
            The user name for the new user, must be unique
            </summary>
            <example>Adam</example>
        </member>
        <member name="P:YourChores.Server.APIModels.RegisterAPIModel.Request.Email">
            <summary>
            The email of the new user, must be unique
            </summary>
            <example>Adam@gmail.com</example>
        </member>
        <member name="P:YourChores.Server.APIModels.RegisterAPIModel.Request.Password">
            <summary>
            The password for the new user
            Must be more than 8 digits
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RegisterAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RegisterAPIModel.Response.UserName">
            <summary>
            The userName of the created user
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RegisterAPIModel.Response.Email">
            <summary>
            The email of the created user
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomAPIModel">
            <summary>
            API Model for the rooms end point
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Response.RoomId">
            <summary>
            The id of the requested room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Response.RoomName">
            <summary>
            The name of the requested room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Response.AllowMembersToPost">
            <summary>
            If the requested room allow members to post
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Response.NumberOfPendingChores">
            <summary>
            Number of pending chores in this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Response.HighestUrgency">
            <summary>
            The highest urgency chore from the pending chores in this room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse">
            <summary>
            The detailed response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse.RoomId">
            <summary>
            The id of the requested room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse.RoomName">
            <summary>
            The name of the requested room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse.AllowMembersToPost">
            <summary>
            If the requested room allow members to post
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse.IsOwner">
            <summary>
            If the current user is the owner of this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse.RoomMembers">
            <summary>
            The members of this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse.JoinRequests">
            <summary>
            The join requests to this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.DetailedResponse.Chores">
            <summary>
            The chores of this room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomAPIModel.RoomMember">
            <summary>
            Room member response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.RoomMember.UserId">
            <summary>
            The id of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.RoomMember.FirstName">
            <summary>
            The first name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.RoomMember.LastName">
            <summary>
            The last name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.RoomMember.IsOwner">
            <summary>
            If this member is an owner to this room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomAPIModel.JoinRequest">
            <summary>
            the user who sent the join request
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.JoinRequest.JoinRequestId">
            <summary>
            The id of the join request
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.JoinRequest.UserId">
            <summary>
            The id of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.JoinRequest.FirstName">
            <summary>
            The first name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.JoinRequest.LastName">
            <summary>
            The last name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.JoinRequest.JoinRequestType">
            <summary>
            The type of this join request
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomAPIModel.Chore">
            <summary>
            Chore response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Chore.ChoreId">
            <summary>
            The id of this chore
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Chore.Description">
            <summary>
            Chore description
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Chore.Done">
            <summary>
            If the chore is done
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.Chore.Urgency">
            <summary>
            The urgency of the chore (1:low, 2:medium, 3:high)
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse">
            <summary>
            The breif response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse.RoomId">
            <summary>
            The id of the requested room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse.RoomName">
            <summary>
            The name of the requested room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse.NumberOfMembers">
            <summary>
            Number of members in this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse.MaxAllowedMembers">
            <summary>
            Maximum alowed members in this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse.IsMember">
            <summary>
            If the user is a member of this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse.JoinRequestSent">
            <summary>
            If there is already a join request sent to this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomAPIModel.SearchRoomResponse.IsInvited">
            <summary>
            If there is already an invite from this room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomJoinRequestAPIModel">
            <summary>
            API Model for the rooms end point
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response.JoinRequestId">
            <summary>
            The id of the join request
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response.UserId">
            <summary>
            The id of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response.FirstName">
            <summary>
            The first name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response.LastName">
            <summary>
            The last name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response.RoomId">
            <summary>
            The id of the room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response.RoomName">
            <summary>
            The name of the room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.RoomJoinRequestAPIModel.Response.JoinRequestType">
            <summary>
            The type of this join request
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.SearchMemberAPIModel">
            <summary>
            API model for creating a room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.SearchMemberAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Request.RoomId">
            <summary>
            The id of the room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Request.userName">
            <summary>
            The user name of the member we are trying to find
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.SearchMemberAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Response.UserId">
            <summary>
            The id of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Response.FirstName">
            <summary>
            The first name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Response.LastName">
            <summary>
            The last name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Response.UserName">
            <summary>
            The User name of the member
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Response.IsMember">
            <summary>
            If this user is a member of the room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Response.IsInvited">
            <summary>
            If this user is already invited to this room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.SearchMemberAPIModel.Response.IsRequestingJoin">
            <summary>
            If this user has already sent a join request
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.UpdateChoreAPIModel">
            <summary>
            API model for creating a room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.UpdateChoreAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UpdateChoreAPIModel.Request.ChoreId">
            <summary>
            The id of the chore
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UpdateChoreAPIModel.Request.RoomId">
            <summary>
            The id of the room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.UpdateRoomAPIModel">
            <summary>
            API model for creating a room
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.UpdateRoomAPIModel.Request">
            <summary>
            The request model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UpdateRoomAPIModel.Request.RoomId">
            <summary>
            The id of the room
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UpdateRoomAPIModel.Request.AllowMembersToPost">
            <summary>
            Giving the ability to room members to share chores
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.UpdateRoomAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UpdateRoomAPIModel.Response.RoomName">
            <summary>
            The created room name
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UpdateRoomAPIModel.Response.AllowMembersToPost">
            <summary>
            if the created room allow members to post
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.UserAPIModel">
            <summary>
            API Model to return the user information
            </summary>
        </member>
        <member name="T:YourChores.Server.APIModels.UserAPIModel.Response">
            <summary>
            The response model
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UserAPIModel.Response.Id">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UserAPIModel.Response.FirstName">
            <summary>
            THe first name of the user
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UserAPIModel.Response.LastName">
            <summary>
            The last name of the user
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UserAPIModel.Response.UserName">
            <summary>
            The user name of the user
            </summary>
        </member>
        <member name="P:YourChores.Server.APIModels.UserAPIModel.Response.Email">
            <summary>
            The email of the user
            </summary>
        </member>
        <member name="T:YourChores.Server.Authentication.AuthenticationExtension">
            <summary>
            Authentication wrappper 
            </summary>
        </member>
        <member name="M:YourChores.Server.Authentication.AuthenticationExtension.AddTokenAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configure the toekn authentication
            </summary>
            <param name="services">Service colleciton</param>
            <param name="config">Congigeration of the API</param>
            <returns></returns>
        </member>
        <member name="T:YourChores.Server.Controllers.AppVersionController">
            <summary>
            Controller in charge of all the operation related to app version
            </summary>
        </member>
        <member name="M:YourChores.Server.Controllers.AppVersionController.#ctor(YourChores.Data.DataAccess.ApplicationDbContext,Microsoft.AspNetCore.Identity.UserManager{YourChores.Data.Models.ApplicationUser})">
            <summary>
            Defautl constructor
            </summary>
            <param name="context"></param>
            <param name="userManager"></param>
        </member>
        <member name="M:YourChores.Server.Controllers.AppVersionController.CreateNewVersion(YourChores.Server.APIModels.AppVersionAPIModel.Request)">
            <summary>
            End point to allow the admin to create new version
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.AppVersionController.GetLatestVersion">
            <summary>
            End point to get the latest version
            </summary>
            <returns></returns>
        </member>
        <member name="T:YourChores.Server.Controllers.AuthController">
            <summary>
            The controller in charge of all the operation of the authentication
            </summary>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Identity.SignInManager{YourChores.Data.Models.ApplicationUser},Microsoft.AspNetCore.Identity.UserManager{YourChores.Data.Models.ApplicationUser})">
            <summary>
            Default constrcutor
            </summary>
            <param name="configuration"></param>
            <param name="signInManager"></param>
            <param name="userManager"></param>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.Register(YourChores.Server.APIModels.RegisterAPIModel.Request)">
            <summary>
            Register a new user
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.Login(YourChores.Server.APIModels.LoginAPIModel.Request)">
            <summary>
            End point for loggin in using userName/Email with password
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.TokenLogin">
            <summary>
            End point to check the token and generate new one if valid, and let the user in 
            </summary>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.ChangeName(YourChores.Server.APIModels.ChangeNameAPIModel.Request)">
            <summary>
            End point to change or assign the first and last name for the user
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.ChangePassword(YourChores.Server.APIModels.ChangePasswordAPIModel.Request)">
            <summary>
            End point to change the password of the current user
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.GetMyInfo">
            <summary>
            End point to get the info of the logged in user
            </summary>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.AuthController.GenerateJSONWebToken(YourChores.Data.Models.ApplicationUser)">
            <summary>
            A method to generate a web token for the user
            </summary>
            <param name="user">The user to generate the web token for</param>
            <returns></returns>
        </member>
        <member name="T:YourChores.Server.Controllers.ChoresController">
            <summary>
            Controller in charge of all the operation related to chores
            </summary>
        </member>
        <member name="M:YourChores.Server.Controllers.ChoresController.#ctor(YourChores.Data.DataAccess.ApplicationDbContext,Microsoft.AspNetCore.Identity.UserManager{YourChores.Data.Models.ApplicationUser})">
            <summary>
            Defautl constructor
            </summary>
            <param name="context"></param>
            <param name="userManager"></param>
        </member>
        <member name="M:YourChores.Server.Controllers.ChoresController.CreateChore(YourChores.Server.APIModels.CreateChoreAPIModel.Request)">
            <summary>
            End point to allow the user to create a new chore
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.ChoresController.GetChores">
            <summary>
            End point to get all the chores for this user
            </summary>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.ChoresController.UpdateChore(YourChores.Server.APIModels.UpdateChoreAPIModel.Request)">
            <summary>
            End point to update the chore
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="T:YourChores.Server.Controllers.RoomsController">
            <summary>
            Controller in charge of all the operation related to rooms
            </summary>
        </member>
        <member name="F:YourChores.Server.Controllers.RoomsController.MAX_USER_ROOMS">
            <summary>
            The maximum number of allowed rooms for a user
            </summary>
        </member>
        <member name="F:YourChores.Server.Controllers.RoomsController.MAX_ROOM_USERS">
            <summary>
            The maximum number of user in one room
            </summary>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.#ctor(YourChores.Data.DataAccess.ApplicationDbContext,Microsoft.AspNetCore.Identity.UserManager{YourChores.Data.Models.ApplicationUser})">
            <summary>
            Defautl constructor
            </summary>
            <param name="context"></param>
            <param name="userManager"></param>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.CreateRoom(YourChores.Server.APIModels.CreateRoomAPIModel.Request)">
            <summary>
            End point to allow the user to create a new room
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.GetRooms">
            <summary>
            End point to get all the rooms that the current user joined
            </summary>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.GetRoomById(System.Int32)">
            <summary>
            End point to get the details of a room by Id
            </summary>
            <param name="id">The id of the room</param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.GetRoomsByName(System.String)">
            <summary>
            End point to get the details of a room by Name
            </summary>
            <param name="name">The name of the room</param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.JoinRoom(YourChores.Server.APIModels.JoinRoomRequestAPIModel.Request)">
            <summary>
            End point so that the user can send a join request to a room
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.InviteUser(YourChores.Server.APIModels.InviteUserRequestAPIModel.Request)">
            <summary>
            End point so that the room room owner can invite users to the room
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.LeaveRoom(YourChores.Server.APIModels.LeaveRoomAPIModel.Request)">
            <summary>
            End point to allow the members to leave a room
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.KickUser(YourChores.Server.APIModels.KickUserAPIModel.Request)">
            <summary>
            End point to allow the owner of a room to kick other users
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.UpdateRoom(YourChores.Server.APIModels.UpdateRoomAPIModel.Request)">
            <summary>
            End point to update the settings of the room
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.PromoteMember(YourChores.Server.APIModels.PromoteUserAPIModel.Request)">
            <summary>
            End point to allow the owners of the room to promote other members
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.DemoteOwner(YourChores.Server.APIModels.DemoteOwnerAPIModel.Request)">
            <summary>
            End point to allow the owners of the room to demote other owners
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.GetMemberByUserName(YourChores.Server.APIModels.SearchMemberAPIModel.Request)">
            <summary>
            End point to search for a members for this room
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.AcceptRequest(YourChores.Server.APIModels.AcceptRequestAPIModel.Request)">
            <summary>
            End point to allow the owners of the room accept the join request 
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.CancelInvitaion(YourChores.Server.APIModels.CancelInvitaionAPIModel.Request)">
            <summary>
            End point to allow the owners of the room to cancel sent requests
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.DeclineRequest(YourChores.Server.APIModels.DeclineRequestAPIModel.Request)">
            <summary>
            End point to allow the owners of the room to decline room join request
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.AcceptInvitation(YourChores.Server.APIModels.AcceptInvitationAPIModel.Request)">
            <summary>
            End point to allow the users to accept an invitation to join a room
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.CancelRequest(YourChores.Server.APIModels.CancelRequestAPIModel.Request)">
            <summary>
            End point to allow the owners of the room to cancel sent requests
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.DeclineInvitation(YourChores.Server.APIModels.DeclineInvitationAPIModel.Request)">
            <summary>
            End point to allow the owners of the room to decline room join request
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.Controllers.RoomsController.GetMyRequests">
            <summary>
            End point to allow the owners of the room to decline room join request
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="T:YourChores.Server.OpenAPI.AddSwaggerImplementation">
            <summary>
            Swagger setup
            </summary>
        </member>
        <member name="M:YourChores.Server.OpenAPI.AddSwaggerImplementation.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure the toekn authentication
            </summary>
            <param name="services">Service colleciton</param>
            <param name="config">Congigeration of the API</param>
            <returns></returns>
        </member>
        <member name="M:YourChores.Server.OpenAPI.AddSwaggerImplementation.ConfigureSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            To configure the UI of the open api
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:YourChores.Server.Program">
            <summary>
            The entry class of the application
            </summary>
        </member>
        <member name="M:YourChores.Server.Program.Main(System.String[])">
            <summary>
            The entry method of the application
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:YourChores.Server.Program.CreateHostBuilder(System.String[])">
            <summary>
            Start building the services 
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:YourChores.Server.Startup">
            <summary>
            The startup of our server
            </summary>
        </member>
        <member name="M:YourChores.Server.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:YourChores.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:YourChores.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.IServiceProvider)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="serviceProvider"></param>
        </member>
    </members>
</doc>
